double DP45SolverCpu::getStepError(double timeStep){
	double err=0;
#pragma omp parallel for reduction (+:err)
	for (int idx=0; idx<mCount; idx++){
		double erri =  timeStep * (e1 * mTempStore1[idx] + e3 * mTempStore3[idx] + e4 * mTempStore4[idx] +
	                            e5 * mTempStore5[idx] + e6 * mTempStore6[idx]+ e7 * mTempStore7[idx])
	                          /(aTol/* + rTol * max(mArg[idx], mState[idx])*/);
	   err += erri * erri;
	}

	return err;
}

Если убрать комментарии в расчетах (деление), то вычисление этим методом зависает. Так как ошибка равно -nan, а шаг равен 0